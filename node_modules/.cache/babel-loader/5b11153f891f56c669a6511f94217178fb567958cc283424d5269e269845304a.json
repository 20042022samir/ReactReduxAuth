{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n  isAutenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = state.showCounter === true ? false : true;\n    }\n  }\n});\nconst initialAuthState = {\n  isAutenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    loggin(state) {\n      state.isAutenticated = true;\n    },\n    logged(state) {\n      state.isAutenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialCounterState","counter","showCounter","isAutenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","authSlice","loggin","logged","store","reducer","counterActions","actions"],"sources":["C:/Users/ASUS/Desktop/01-starting-project/src/Store/index.js"],"sourcesContent":["import { createStore } from 'redux'\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\nconst initialCounterState = {\r\n    counter: 0,\r\n    showCounter: true,\r\n    isAutenticated: false\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggle(state) {\r\n            state.showCounter = state.showCounter === true ? false : true\r\n        },\r\n    }\r\n});\r\n\r\nconst initialAuthState={\r\n    isAutenticated:false\r\n}\r\n\r\nconst authSlice= createSlice({\r\n    name:'authentication',\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n      loggin(state){\r\n        state.isAutenticated=true;\r\n      },\r\n      logged(state){\r\n        state.isAutenticated=false;\r\n      }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer:counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAE;AACpB,CAAC;AAED,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEN,mBAAmB;EACjCO,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACR,OAAO,EAAE;IACnB,CAAC;IACDS,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACR,OAAO,EAAE;IACnB,CAAC;IACDU,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGW,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACVA,KAAK,CAACP,WAAW,GAAGO,KAAK,CAACP,WAAW,KAAK,IAAI,GAAG,KAAK,GAAG,IAAI;IACjE;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMa,gBAAgB,GAAC;EACnBZ,cAAc,EAAC;AACnB,CAAC;AAED,MAAMa,SAAS,GAAElB,WAAW,CAAC;EACzBO,IAAI,EAAC,gBAAgB;EACrBC,YAAY,EAACS,gBAAgB;EAC7BR,QAAQ,EAAC;IACPU,MAAMA,CAACR,KAAK,EAAC;MACXA,KAAK,CAACN,cAAc,GAAC,IAAI;IAC3B,CAAC;IACDe,MAAMA,CAACT,KAAK,EAAC;MACXA,KAAK,CAACN,cAAc,GAAC,KAAK;IAC5B;EACF;AACJ,CAAC,CAAC;AAEF,MAAMgB,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAChB,YAAY,CAACgB;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}